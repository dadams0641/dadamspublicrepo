 - sts_assume_role:
    role_arn: "{{rolearn}}"
    role_session_name: "{{rolename}}"
   register: assumed_role

 - set_fact:
     new_ec2: "{{item}}"
   with_lines: cat ./fm_instance_ip_address1

 - debug:
     var: new_ec2

 - add_host:
     hostname: "{{new_ec2}}"
     ansible_user: ec2-user
     ansible_ssh_private_key_file: .ssh/FMDevOpsWindowsKey

 - name: Copy Files To Host
   copy:
     remote_src: no
     src: "{{item}}"
     dest: /root
   with_items:
     - "files/addteam.py"
     - "files/krb5.conf"
     - "files/firstrun.tar"
     - "files/keygen.tar"
     - "files/sudoers.tar"
     - "files/tomcat-remediation.tar"
     - "files/TomcatDeploy.tar.gz"
     - "files/websphere.tar"
     - "files/unixteam.tar"   
     - "files/sshd_config"
     - "files/ssh_config"
   become: true
   delegate_to: "{{new_ec2}}"

 - name: Install Required Packages
   yum:
     name: "{{item}}"
     state: latest
   loop:
     - "python3"
     - "krb5-workstation"
     - "krb5-libs"
     - "authconfig"
     - "pam_krb5"
     - "nss"
     - "nss-util"
     - "nss-tools"
     - "nss-sysinit"
   become: true
   delegate_to: "{{new_ec2}}"

 - name: Run Basic Scripts
   shell: "{{item}}"
   args:
     chdir: /root
   loop:
     - "python3 addteam.py"
   become: true
   delegate_to: "{{new_ec2}}"

 - name: Unpack Unix Team
   unarchive:
     src: /root/unixteam.tar
     dest: /home
     remote_src: yes
   become: true
   delegate_to: "{{new_ec2}}"

 - name: Set Privs on Home Directories
   shell: "{{item}}"
   args:
     chdir: /home
   with_items:
     - "for x in $(ls); do chown -R $x:$x $x; done"
   become: true
   delegate_to: "{{new_ec2}}"

 - name: Unpack Sudoers.d
   unarchive:
     src: /root/sudoers.tar
     dest: /etc/sudoers.d
     remote_src: yes
   become: true
   delegate_to: "{{new_ec2}}"

 - name: Move Kerberos Control File
   copy:
     src: /root/krb5.conf
     dest: /etc/krb5.conf
     remote_src: yes
   become: true
   delegate_to: "{{new_ec2}}"

 - name: Move SSH Control Files
   copy:
     src: "/root/{{item}}"
     dest: /etc/ssh/{{item}}
     remote_src: yes
   loop:
     - "ssh_config"
     - "sshd_config"   
   become: true
   delegate_to: "{{new_ec2}}"

 - name: Restart Services
   service:
     name: sshd
     state: restarted
   loop:
     - "sssd"
     - "sshd"
     - "httpd" 
   ignore_errors: true
   delegate_to: "{{new_ec2}}"