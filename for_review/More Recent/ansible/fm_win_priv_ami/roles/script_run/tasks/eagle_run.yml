 - sts_assume_role:
    role_arn: "{{rolearn}}"
    role_session_name: "{{rolename}}"
   register: assumed_role

 - set_fact:
     new_ec2: "{{item}}"
   with_lines: cat ./fm_instance_ip_address1

 - set_fact:
     eagle_pass: "{{ lookup('aws_secret', '/privami/eaglepass', aws_access_key=assumed_role.sts_creds.access_key, aws_secret_key=assumed_role.sts_creds.secret_key, aws_security_token=assumed_role.sts_creds.session_token) }}"

 - add_host:
     hostname: "{{new_ec2}}"
     ansible_user: eagle
     ansible_password: "{{eagle_pass}}"
     ansible_connection: winrm
     ansible_winrm_transport: ntlm
     ansible_winrm_server_cert_validation: ignore

 - name: Copy Eagle-Specific Powershell Templates
   ansible.windows.win_template:
     src: "files/{{item}}.ps1.j2"
     dest: "C:\\temp\\{{item}}.ps1"
   with_items:
     - "admin_disable"
   delegate_to: "{{new_ec2}}"

 - name: Run Eagle-Specific Powershell Scripts
   win_command: "powershell c:\\temp\\{{item}}.ps1"
   args:
     chdir: c:\temp\
   with_items:
     - "admin_disable"
   delegate_to: "{{new_ec2}}"

 - name: Clean Up Temp Files
   ansible.windows.win_file:
     path: "C:\\temp\\{{item}}.ps1"
     state: absent
   with_items:
     - "admin_disable"
     - "eagle_create"
     - "chrome_install"
   delegate_to: "{{new_ec2}}"