 - name: "Read AMI ID for use with EC2 Launch"
   set_fact:
     ami_id: "{{ lookup('aws_ssm', '/ci/Private_{{platform}}_AMI_ID') }}"

 - ec2_vpc_net_info:
     filters:
       "tag:Name": "{{vpc_name}}"
   register: vpc_info

 - debug:
     var: vpc_info

 - set_fact:
     vpc_id: "{{vpc_info.vpcs[0].id}}"

 - ec2_vpc_subnet_info:
     filters:
       "tag:Name": "{{subnet_name}}"
   register: subnet_info

 - set_fact:
     subnet_id: "{{subnet_info.subnets[0].id}}"

 - ec2_group_info:
     filters:
       group_name: "{{sg_name}}"
   register: group_info

 - set_fact:
     sg_id: "{{group_info.security_groups[0].group_id}}"

 - debug:
     var: vpc_id
 - debug:
     var: ami_id
 - debug:
     var: subnet_id
 - debug:
     var: sg_id


 - amazon.aws.ec2:
     region: "{{aws_region}}"
     image: "{{ami_id}}"
     state: present
     termination_protection: "{{protection}}"
     instance_type: "{{instance_type}}"
     instance_profile_name: "{{iam_profile_name}}"
     instance_tags:
       AppManager: "{{tags.app_manager}}"
       AppName: "{{tags.app_name}}"
       AppOwner: "{{tags.app_owner}}"
       Automation: "{{tags.automation}}"
       Backup: "{{tags.backup}}"
       BusinessUnit: "{{tags.business_unit}}"
       CostCenter: "{{tags.cost_center}}"
       CostAllocation: "{{tags.cost_allocation}}"
       Description: "{{tags.description}}"
       Environment: "{{tags.environment}}"
       InstanceManager: "{{tags.instance_manager}}"
       Name: "{{tags.name}}{{item}}"
       PatchGroup: "{{tags.patch_group}}"
       TicketNumber: "{{tags.ticket_number}}"
     volumes:
       - device_name: "{{volumes.name}}"
         volume_type: "{{volumes.type}}"
         volume_size: "{{volumes.size}}"
         #iops: "{{iop}}"
         delete_on_termination: "{{term_delete}}"
         encrypted: "{{volumes.encryption}}"
       - device_name: "/dev/xvdb"
         volume_type: "gp2"
         volume_size: 150
         #iops: "{{iop}}"
         delete_on_termination: "{{term_delete}}"
         encrypted: "{{volumes.encryption}}"
       - device_name: "/dev/xvdc"
         volume_type: "gp2"
         volume_size: 300
         #iops: "{{iop}}"
         delete_on_termination: "{{term_delete}}"
         encrypted: "{{volumes.encryption}}"
       - device_name: "/dev/xvdd"
         volume_type: "gp2"
         volume_size: 1024
         #iops: "{{iop}}"
         delete_on_termination: "{{term_delete}}"
         encrypted: "{{volumes.encryption}}"
     wait: "{{wait}}"
     group_id: "{{sg_id}}" 
     vpc_subnet_id: "{{subnet_id}}"
     assign_public_ip: "{{assign_pub_ip}}"
     key_name: FMDevOpsWindowsKey
     user_data: | 
       <powershell>
       Start-Sleep -s 3
       <persist>true</persist>
   register: ec2_output
   with_sequence: start="{{start_value}}" end="{{end_value}}"

 - include: private.yml
   when: assign_pub_ip|lower == "no"

 - include: public.yml
   when: assign_pub_ip|lower == "yes"
