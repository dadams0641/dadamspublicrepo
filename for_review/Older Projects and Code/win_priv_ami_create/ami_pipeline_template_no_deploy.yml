---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Codepipeline stack that takes S3 template uploads and
  deploys them to the appropriate accounts.

Parameters:
  ProjectName:
    Type: String
    Description: The name of the stack/stackset to be processed by this pipeline.
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-04e8a82cae2443538
    Description: A VPC ID to provide when spinning up this pipeline
  PubSubnetId:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-08e3477e707d70342
    Description: A subnet ID to run the codebuild worker in (must be a public subnet)
  PrivSubnetId:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-002e76ba8059f3025
    Description: A subnet ID to run the Instance (must be a private subnet)

Resources:
  CodeBuildCreateAmi:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.ami.yml
      TimeoutInMinutes: 480
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: REGION
            Value: !Ref AWS::Region
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: SG_ID
            Value: !Ref AmiBuildSecurityGroup
          - Name: UsageVpcId
            Value: !Ref VpcId
          - Name: Subnet_ID
            Value: !Ref PubSubnetId
      ServiceRole: !GetAtt AmiCodeBuildServiceRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !Ref CodeBuildWorker
        Subnets:
          - !Ref PrivSubnetId
        VpcId: !Ref VpcId

  AmiBuildSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for CIS Instance
      SecurityGroupIngress:
      - SourceSecurityGroupId: !Ref CodeBuildWorker
        FromPort: 0
        IpProtocol: tcp
        ToPort: 65535
      VpcId: !Ref VpcId
  CodeBuildWorker:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for CodePipeline
      SecurityGroupIngress: []
      VpcId: !Ref VpcId

  DeployAmiToProd:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.prod.yml
      TimeoutInMinutes: 480
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: STAGE
            Value: prod
          - Name: REGION
            Value: !Ref AWS::Region
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
      ServiceRole: !GetAtt AmiCodeBuildServiceRole.Arn

  PipelineNotificationsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${ProjectName}-notifications

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/ci/AmiPipelineServiceRole
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: S3
              Configuration:
                S3Bucket: '{{resolve:ssm:/trek10/ci/UploadBucketName:1}}'
                S3ObjectKey: !Sub "StackShack/${ProjectName}-bundle.zip"
              OutputArtifacts:
                - Name: ProjectSrc
              RunOrder: 1 #TODO: add unit tests stage
        - Name: CreateAmi
          Actions:
            - Name: CreateAmi
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildCreateAmi
              InputArtifacts:
                - Name: ProjectSrc
              OutputArtifacts:
                - Name: TransformedTemplate
              RunOrder: 1
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties: {}
  AmiPipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /ci/
      RoleName: AmiPipelineServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: 
              - codepipeline.amazonaws.com
              - codebuild.amazonaws.com
              - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateStackSet
                  - cloudformation:CreateStackSetInstances
                  - cloudformation:DeleteStackSet
                  - cloudformation:DescribeStackSet
                  - cloudformation:DescribeStackSetOperation 
                  - cloudformation:ListStackInstances 
                  - cloudformation:ListStackSetOperationResults 
                  - cloudformation:ListStackSetOperations 
                  - cloudformation:ListStackSets 
                  - cloudformation:StopStackSetOperation 
                  - cloudformation:UpdateStackSet 
                Resource: '*'
              - Effect: Allow
                Action:
                    - iam:ListRoles
                    - iam:PassRole
                    - s3:ListAllMyBuckets
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket
                  - s3:ListObject*
                  - s3:PutObject
                Resource: 
                  - !GetAtt PipelineArtifactsBucket.Arn
                  - !Sub ${PipelineArtifactsBucket.Arn}/*
                  - '{{resolve:ssm:/trek10/ci/UploadBucketArn:1}}/*'
                  - '{{resolve:ssm:/trek10/ci/UploadBucketArn:1}}'
                  - 'arn:aws:s3:::res-installers-496307432785-us-east-2'
                  - 'arn:aws:s3:::res-installers-496307432785-us-east-2/*'
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:GenerateDataKey*
                  - kms:DescribeKey
                  - sns:Publish
                  - lambda:Invoke*
                  - Lambda:List*
                  - codepipeline:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                Resource: "*"
  AmiCodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /ci/
      RoleName: AmiCodeBuildServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: 
              - codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action: 'ec2:*'
                Resource: '*'
              - Effect: Allow
                Action: 'iam:PassRole'
                Resource: 
                  - 'arn:aws:iam::496307432785:instance-profile/S3DownloadAgent'
                  - 'arn:aws:iam::496307432785:role/S3DownloadAgents'
              - Sid: ConditionalEC2creationName
                Effect: Allow
                Action: "ec2:RunInstances"
                Resource: "*"
                Condition:
                  StringNotLike: {"aws:RequestTag/TechnicalOwner": "*"}
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:ListObjects
                  - s3:PutObject
                Resource:
                  - '{{resolve:ssm:/trek10/ci/UploadBucketArn:1}}'
                  - '{{resolve:ssm:/trek10/ci/UploadBucketArn:1}}/*'
                  - !GetAtt PipelineArtifactsBucket.Arn
                  - !Sub ${PipelineArtifactsBucket.Arn}/*
                  - 'arn:aws:s3:::res-installers-496307432785-us-east-2'
                  - 'arn:aws:s3:::res-installers-496307432785-us-east-2/*'
              - Effect: Allow
                Action: 'ssm:Get*'
                Resource: '*'
              - Effect: Allow
                Action: 'ssm:Describe*'
                Resource: '*'
              - Effect: Allow
                Action: 'ssm:PutParameter'
                Resource: '*'

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}